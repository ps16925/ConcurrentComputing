/*
 * Parallel-Ants.xc
 *
 *  Created on: 29 Sep 2017
 *      Author: sc16913
 */

#include <platform.h>
#include <stdio.h>

{int, int, int} ant (const unsigned char map[3][4], unsigned int id, unsigned int x, unsigned int y){
    int foodCount = 0;

    for (int i = 0; i < 2; i++){
        if (map[x][(y+1)%4] > map[(x+1)%3][y])
            y = (y+1)%4;
        else
            x = (x+1)%3;

        foodCount += map[x][y];
    }

    printf("Ant %d moved to (%d,%d) with new food count %d\n", id, x, y, foodCount);

    return {foodCount, x, y};
}

int main(){
    unsigned int food[4];
    unsigned int x[4], y[4];
    unsigned int totalFood = 0;
    unsigned int meanX = 0;
    unsigned int meanY = 0;

    const unsigned char map[3][4] = {
                                   {10, 0, 1, 7},
                                   {2, 10, 0, 3},
                                   {6, 8, 7, 6}
                                   };
    chan cWorker1toQueen;
    chan cWorker2toQueen;
    par {
        ant(map, 1, 0, 1);
        ant(map, 2, 1, 0);
        queen(1,1)
    }

    for(int i=0; i<4; i++){
        totalFood += food[i];
        meanX += x[i];
        meanY += y[i];
    }

    printf("Total food amount: %d, mean end position: (%f,%f)\n", totalFood, (float)meanX/4, (float)meanY/4);

    return 0;
}


